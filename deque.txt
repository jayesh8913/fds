#include <iostream>
using namespace std;

class Deque {
    int arr[10];  
    int front, rear, size;

public:
    Deque() {
        front = -1;
        rear = -1;
        size = 10;
    }

    bool isFull() {
        return (front == 0 && rear == size - 1) || (front == rear + 1);
    }

    bool isEmpty() {
        return front == -1;
    }

   
    void addFront(int value) {
        if (isFull()) {
            cout << "Deque is full. Cannot add at front." << endl;
            return;
        }
        if (isEmpty()) {
            front = rear = 0;
        } else if (front == 0) {
            front = size - 1;
        } else {
            front--;
        }
        arr[front] = value;
        cout << value << " added at front." << endl;
    }

    
    void addRear(int value) {
        if (isFull()) {
            cout << "Deque is full. Cannot add at rear." << endl;
            return;
        }
        if (isEmpty()) {
            front = rear = 0;
        } else if (rear == size - 1) {
            rear = 0;
        } else {
            rear++;
        }
        arr[rear] = value;
        cout << value << " added at rear." << endl;
    }

    void deleteFront() {
        if (isEmpty()) {
            cout << "Deque is empty. Cannot delete from front." << endl;
            return;
        }
        cout << arr[front] << " deleted from front." << endl;
        if (front == rear) {
            front = rear = -1;
        } else if (front == size - 1) {
            front = 0;
        } else {
            front++;
        }
    }

   
    void deleteRear() {
        if (isEmpty()) {
            cout << "Deque is empty. Cannot delete from rear." << endl;
            return;
        }
        cout << arr[rear] << " deleted from rear." << endl;
        if (front == rear) {
            front = rear = -1;
        } else if (rear == 0) {
            rear = size - 1;
        } else {
            rear--;
        }
    }

   
    void display() {
        if (isEmpty()) {
            cout << "Deque is empty." << endl;
            return;
        }
        cout << "Deque elements: ";
        if (front <= rear) {
            for (int i = front; i <= rear; i++) {
                cout << arr[i] << " ";
            }
        } else {
            for (int i = front; i < size; i++) {
                cout << arr[i] << " ";
            }
            for (int i = 0; i <= rear; i++) {
                cout << arr[i] << " ";
            }
        }
        cout << endl;
    }
};

int main() {
    Deque deque;
    int choice, value;

    do {
        cout << "\n1. Add Front\n2. Add Rear\n3. Delete Front\n4. Delete Rear\n5. Display\n6. Exit\nEnter your choice: ";
        cin >> choice;

        switch (choice) {
            case 1:
                cout << "Enter value to add at front: ";
                cin >> value;
                deque.addFront(value);
                break;

            case 2:
                cout << "Enter value to add at rear: ";
                cin >> value;
                deque.addRear(value);
                break;

            case 3:
                deque.deleteFront();
                break;

            case 4:
                deque.deleteRear();
                break;

            case 5:
                deque.display();
                break;

            case 6:
                cout << "Exiting..." << endl;
                break;

            default:
                cout << "Invalid choice. Please try again." << endl;
        }
    } while (choice != 6);

    return 0;
}


